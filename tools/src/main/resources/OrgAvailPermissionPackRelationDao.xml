<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.souche.shield.core.base.dao.OrgAvailPermissionPackRelationDao" >
  <resultMap id="BaseResultMap" type="com.souche.shield.core.base.model.domain.OrgAvailPermissionPackRelationDO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="enterprise_code" property="enterpriseCode" jdbcType="VARCHAR" />
    <result column="permission_pack_id" property="permissionPackId" jdbcType="VARCHAR" />
    <result column="permission_pack_type" property="permissionPackType" jdbcType="VARCHAR" typeHandler="com.souche.shield.core.common.mybatis.typehandler.StringEnumTypeHandler" />
    <result column="date_create" property="dateCreate" jdbcType="TIMESTAMP" />
    <result column="date_update" property="dateUpdate" jdbcType="TIMESTAMP" />
    <result column="date_delete" property="dateDelete" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, enterprise_code, permission_pack_id, permission_pack_type, date_create, date_update, date_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.souche.shield.core.base.model.example.OrgAvailPermissionPackRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from security_org_avail_permission_pack_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from security_org_avail_permission_pack_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from security_org_avail_permission_pack_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.souche.shield.core.base.model.example.OrgAvailPermissionPackRelationExample" >
    delete from security_org_avail_permission_pack_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.souche.shield.core.base.model.domain.OrgAvailPermissionPackRelationDO" >
    insert into security_org_avail_permission_pack_relation (id, enterprise_code, permission_pack_id, 
      permission_pack_type, date_create, date_update, 
      date_delete)
    values (#{id,jdbcType=VARCHAR}, #{enterpriseCode,jdbcType=VARCHAR}, #{permissionPackId,jdbcType=VARCHAR}, 
      #{permissionPackType,jdbcType=VARCHAR,typeHandler=com.souche.shield.core.common.mybatis.typehandler.StringEnumTypeHandler}, now(),null,null)
  </insert>


  <insert id="batchInsert" parameterType="java.util.List">
    insert into security_org_avail_permission_pack_relation (id, enterprise_code, permission_pack_id,
    permission_pack_type, date_create, date_update,
    date_delete)
    values
    <foreach collection="records" item="obj" index="index" separator=",">
      (
      #{obj.id,jdbcType=VARCHAR}, #{obj.enterpriseCode,jdbcType=VARCHAR}, #{obj.permissionPackId,jdbcType=VARCHAR},
      #{obj.permissionPackType,jdbcType=VARCHAR,typeHandler=com.souche.shield.core.common.mybatis.typehandler.StringEnumTypeHandler},
      now(), now(),
      null

      )
    </foreach>
  </insert>

  <select id="countByExample" parameterType="com.souche.shield.core.base.model.example.OrgAvailPermissionPackRelationExample" resultType="java.lang.Integer" >
    select count(*) from security_org_avail_permission_pack_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update security_org_avail_permission_pack_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseCode != null" >
        enterprise_code = #{record.enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionPackId != null" >
        permission_pack_id = #{record.permissionPackId,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionPackType != null" >
        permission_pack_type = #{record.permissionPackType,jdbcType=VARCHAR,typeHandler=com.souche.shield.core.common.mybatis.typehandler.StringEnumTypeHandler},
      </if>
      date_update = now(),
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.souche.shield.core.base.model.domain.OrgAvailPermissionPackRelationDO" >
    update security_org_avail_permission_pack_relation
    <set >
      <if test="enterpriseCode != null" >
        enterprise_code = #{enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionPackId != null" >
        permission_pack_id = #{permissionPackId,jdbcType=VARCHAR},
      </if>
      <if test="groupType != null" >
        permission_pack_type = #{permissionPackType,jdbcType=VARCHAR,typeHandler=com.souche.shield.core.common.mybatis.typehandler.StringEnumTypeHandler},
      </if>
      date_update = now(),
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>